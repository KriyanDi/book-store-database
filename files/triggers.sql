-- BOOK --
CREATE TRIGGER AINS_BOOK
    AFTER INSERT
    ON BOOK
    REFERENCING NEW AS N
    FOR EACH ROW
    INSERT INTO ALLSKU
    VALUES (N.SKU);

CREATE TRIGGER AUPD_BOOK
    AFTER UPDATE OF SKU
    ON BOOK
    REFERENCING OLD AS O NEW AS N
    FOR EACH ROW
    UPDATE ALLSKU AS ALSK
    SET ALSK.SKU = N.SKU
    WHERE SKU = N.SKU;

CREATE TRIGGER ADEL_BOOK
    AFTER DELETE
    ON BOOK
    REFERENCING OLD AS O
    FOR EACH ROW
    DELETE
    FROM ALLSKU AS ALSK
    WHERE SKU = O.SKU;

CREATE TRIGGER UPDATE_PROD_QUANTITY_BOOK
    AFTER UPDATE OF STORGQUANT
    ON BOOK
    REFERENCING NEW AS N
    FOR EACH ROW
    WHEN (N.STORGQUANT = 0)
    UPDATE BOOK
    SET STORGQUANT = 9
    WHERE SKU = N.SKU;

-- NOTEBOOK --
CREATE TRIGGER AINS_NOTEBOOK
    AFTER INSERT
    ON NOTEBOOK
    REFERENCING NEW AS N
    FOR EACH ROW
    INSERT INTO ALLSKU
    VALUES (N.SKU);

CREATE TRIGGER AUPD_NOTEBOOK
    AFTER UPDATE OF SKU
    ON NOTEBOOK
    REFERENCING OLD AS O NEW AS N
    FOR EACH ROW
    UPDATE ALLSKU AS ALSK
    SET ALSK.SKU = N.SKU
    WHERE SKU = N.SKU;

CREATE TRIGGER ADEL_NOTEBOOK
    AFTER DELETE
    ON NOTEBOOK
    REFERENCING OLD AS O
    FOR EACH ROW
    DELETE
    FROM ALLSKU AS ALSK
    WHERE SKU = O.SKU;

CREATE TRIGGER UPDATE_PROD_QUANTITY_NOTEBOOK
    AFTER UPDATE OF STORGQUANT
    ON NOTEBOOK
    REFERENCING NEW AS N
    FOR EACH ROW
    WHEN (N.STORGQUANT = 0)
    UPDATE NOTEBOOK
    SET STORGQUANT = 9
    WHERE SKU = N.SKU;

-- PEN --
CREATE TRIGGER AINS_PEN
    AFTER INSERT
    ON PEN
    REFERENCING NEW AS N
    FOR EACH ROW
    INSERT INTO ALLSKU
    VALUES (N.SKU);

CREATE TRIGGER AUPD_PEN
    AFTER UPDATE OF SKU
    ON PEN
    REFERENCING OLD AS O NEW AS N
    FOR EACH ROW
    UPDATE ALLSKU AS ALSK
    SET ALSK.SKU = N.SKU
    WHERE SKU = N.SKU;

CREATE TRIGGER ADEL_PEN
    AFTER DELETE
    ON PEN
    REFERENCING OLD AS O
    FOR EACH ROW
    DELETE
    FROM ALLSKU AS ALSK
    WHERE SKU = O.SKU;

CREATE TRIGGER UPDATE_PROD_QUANTITY_PEN
    AFTER UPDATE OF STORGQUANT
    ON PEN
    REFERENCING NEW AS N
    FOR EACH ROW
    WHEN (N.STORGQUANT = 0)
    UPDATE PEN
    SET STORGQUANT = 9
    WHERE SKU = N.SKU;

-- PENCIL --
CREATE TRIGGER AINS_PENCIL
    AFTER INSERT
    ON PENCIL
    REFERENCING NEW AS N
    FOR EACH ROW
    INSERT INTO ALLSKU
    VALUES (N.SKU);

CREATE TRIGGER AUPD_PENCIL
    AFTER UPDATE OF SKU
    ON PENCIL
    REFERENCING OLD AS O NEW AS N
    FOR EACH ROW
    UPDATE ALLSKU AS ALSK
    SET ALSK.SKU = N.SKU
    WHERE SKU = N.SKU;

CREATE TRIGGER ADEL_PENCIL
    AFTER DELETE
    ON PENCIL
    REFERENCING OLD AS O
    FOR EACH ROW
    DELETE
    FROM ALLSKU AS ALSK
    WHERE SKU = O.SKU;

CREATE TRIGGER UPDATE_PROD_QUANTITY_PENCIL
    AFTER UPDATE OF STORGQUANT
    ON PENCIL
    REFERENCING NEW AS N
    FOR EACH ROW
    WHEN (N.STORGQUANT = 0)
    UPDATE PENCIL
    SET STORGQUANT = 9
    WHERE SKU = N.SKU;

-- MEMBER --
CREATE TRIGGER ADEL_MEMBER
    AFTER DELETE
    ON MEMBER
    REFERENCING OLD AS O
    FOR EACH ROW
BEGIN
    ATOMIC
    DECLARE VAR_PEOPLE_ON_ADDRESS INTEGER;

    SET VAR_PEOPLE_ON_ADDRESS = FN45419.NUM_OF_PEOPLE(O.IDADDRESS);


    IF VAR_PEOPLE_ON_ADDRESS = 0 THEN
        DELETE
        FROM ADDRESS AS A
        WHERE A.ID = O.IDADDRESS;
    END IF;
END;

-- VENDOR --
CREATE TRIGGER ADEL_VENDOR
    AFTER DELETE
    ON VENDOR
    REFERENCING OLD AS O
    FOR EACH ROW
BEGIN
    ATOMIC
    DECLARE VAR_VENDOR_IDADDRESS INTEGER;
    DECLARE VAR_PEOPLE_ON_ADDRESS INTEGER;

    SET VAR_VENDOR_IDADDRESS = (SELECT IDADDRESS FROM VENDORADDRESS WHERE IDVENDOR = O.ID);
    SET VAR_PEOPLE_ON_ADDRESS = FN45419.NUM_OF_PEOPLE(VAR_VENDOR_IDADDRESS);

    IF VAR_PEOPLE_ON_ADDRESS = 0 THEN
        DELETE
        FROM ADDRESS AS A
        WHERE A.ID = VAR_VENDOR_IDADDRESS;
    END IF;
END;

-- BASKET --
CREATE TRIGGER INSERT_BASKET_PRODUCTS
    AFTER INSERT ON BASKET
    REFERENCING  NEW AS N
    FOR EACH ROW
    BEGIN ATOMIC
        DECLARE CURR_SKU INTEGER;
        DECLARE FLAG INTEGER;
        SET CURR_SKU = (SELECT SKU FROM BASKET WHERE BASKET.ID = N.ID);
        SET FLAG = FN45419.CHECK_PROD_IS_AVAL(CURR_SKU);
        IF FLAG = 0 THEN
                DELETE FROM BASKET WHERE BASKET.ID = N.ID;
        END IF;
    END;